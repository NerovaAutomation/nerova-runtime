#!/usr/bin/env bash
set -euo pipefail

OS=$(uname -s | tr '[:upper:]' '[:lower:]')
ARCH=$(uname -m)
case "$ARCH" in
  x86_64) ARCH=amd64 ;;
  aarch64|arm64) ARCH=arm64 ;;
  *) echo "Unsupported architecture: $ARCH" >&2; exit 1 ;;
esac

PYTHON=$(command -v python3 || command -v python || true)
if [ -z "$PYTHON" ]; then
  echo "python3 (or python) is required to resolve the release asset" >&2
  exit 1
fi

export NEROVA_OS="$OS"
export NEROVA_ARCH="$ARCH"
export NEROVA_VERSION=${NEROVA_VERSION:-latest}

read -r RELEASE_TAG RELEASE_URL <<'__PY__'
$PYTHON <<PY
import json, os, sys, urllib.request

repo = "NerovaAutomation/nerova-runtime"
platform = os.environ.get("NEROVA_OS")
arch = os.environ.get("NEROVA_ARCH")
version = os.environ.get("NEROVA_VERSION", "latest")

if version == "latest":
    api_url = f"https://api.github.com/repos/{repo}/releases/latest"
else:
    api_url = f"https://api.github.com/repos/{repo}/releases/tags/{version}"

req = urllib.request.Request(api_url, headers={
    "Accept": "application/vnd.github+json",
    "User-Agent": "nerovaagent-installer"
})

with urllib.request.urlopen(req) as resp:
    data = json.load(resp)

tag = data["tag_name"]
asset_name = f"nerova-agent-{tag}-{platform}-{arch}.sh"
for asset in data.get("assets", []):
    if asset.get("name") == asset_name:
        print(tag)
        print(asset.get("browser_download_url"))
        break
else:
    sys.exit(f"Installer {asset_name} not found in release {tag}")
PY
__PY__

if [ -z "$RELEASE_URL" ]; then
  echo "Failed to resolve download URL" >&2
  exit 1
fi

INSTALL_DIR=${NEROVA_HOME:-/opt/nerova}
BIN_DIR=${NEROVA_BIN:-/usr/local/bin}
INSTALLER=$(mktemp /tmp/nerova-agent-XXXX.sh)
trap 'rm -f "$INSTALLER"' EXIT

if ! command -v curl >/dev/null 2>&1; then
  echo "curl is required to download the Nerova agent installer" >&2
  exit 1
fi

echo "Downloading Nerova agent runtime from $RELEASE_URL (tag $RELEASE_TAG)"
curl -fsSL "$RELEASE_URL" -o "$INSTALLER"
chmod +x "$INSTALLER"
NEROVA_HOME="$INSTALL_DIR" NEROVA_BIN="$BIN_DIR" "$INSTALLER"
